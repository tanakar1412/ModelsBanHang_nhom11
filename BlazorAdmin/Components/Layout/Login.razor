@page "/"
@using System.ComponentModel.DataAnnotations
@inject ITaiKhoanService taiKhoanService
@inject NavigationManager Navigation
@using API.Models.DTO
@using BlazorAdmin.Service.IService
<link href="css/Login.css" rel="stylesheet" />
<PageTitle>Login</PageTitle>
<div class="signup-container">
    <EditForm Model="Input" OnValidSubmit="LoginUserAsync"
              FormName="login" Context="editform_context">
        <DataAnnotationsValidator />
        <h2 style="text-align=center;">Login</h2>


        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div class="alert alert-danger mt-3" role="alert">
                @ErrorMessage
            </div>
        }

        <div class="form-floating mb-3">
            <InputText @bind-Value="Input.UserName"
                       id="Input.UserName"
                       class="login-text"
                       autocomplete="username"
                       aria-required="true"
                       placeholder="UserName" />
            <ValidationMessage For="() => Input.UserName"
                               class="text-danger" />
        </div>


        <!-- Password với icon con mắt -->
        <div class="form-floating mb-3 password-wrapper">
            <InputText type="password"
                       @bind-Value="Input.Password"
                       id="Input.Password"
                       class="login-text"
                       autocomplete="current-password"
                       aria-required="true"
                       placeholder="Password" />
            <span class="toggle-password" @onclick="() => TogglePasswordVisibility()">
                @(IsPasswordVisible ? "🙈" : "👁️")
            </span>
            <ValidationMessage For="() => Input.Password"
                               class="text-danger" />
        </div>


       @*  <div class="form-floating mb-3">
            <InputText type="password"
                       @bind-Value="Input.Password"
                       id="Input.Password"
                       class="login-text"
                       autocomplete="current-password"
                       aria-required="true"
                       placeholder="Password" />
            <ValidationMessage For="() => Input.Password"
                               class="text-danger" />
        </div> *@
        <label class="checkbox-container">
            <InputCheckbox id="rememberMe" @bind-Value="Input.RememberMe" />
            <span>Remember me</span>
        </label>
        @(ErrorMessage)
        <div>
            <button class="login-text" type="submit">
                Log in
            </button>
        </div>
    </EditForm>
</div>
    


@code {
    private LoginResponseDto formResult = new();

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private string ErrorMessage = string.Empty;


    private bool IsPasswordVisible = false;

    private string PasswordInputType => IsPasswordVisible ? "text" : "password";

    private void TogglePasswordVisibility()
    {
        IsPasswordVisible = !IsPasswordVisible;
        
    }



    public async Task LoginUserAsync()
    {
        ErrorMessage = string.Empty;

        try
        {
            Console.WriteLine($"Đang cố gắng đăng nhập cho: {Input.UserName}");
            var loginResponseDto = await taiKhoanService.GetByIdChucVuAsync(Input.UserName, Input.Password);

            if (loginResponseDto.IsSuccess)
            {
                
                Navigation.NavigateTo(loginResponseDto.Role == "Admin" ? "/admin" :
                                    loginResponseDto.Role == "NhanVien" ? "/nhanvien" : "/");
            }
            else
            {
                ErrorMessage = loginResponseDto.Message;
                Console.WriteLine($"Đăng nhập thất bại: {ErrorMessage}");
            }
        }
        catch (Exception ex)
        {
            throw;
        }
    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = "Chưa nhập tên đăng nhập")]
        [Display(Name = "UserName")]
        public string UserName { get; set; } = string.Empty;

        [Required(ErrorMessage = "Chưa nhập mật khẩu")]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; } = string.Empty;
		public bool RememberMe { get; set; } = false;
    }
}
@* <script>
    function togglePassword() {
        const input = document.getElementById('passwordInput');
        if (input) {
            input.type = input.type === 'password' ? 'text' : 'password';
        }
    }
</script> *@