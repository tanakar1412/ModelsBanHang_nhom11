@page "/Admin/Thongke"
@using BlazorAdmin.Service
@using BlazorAdmin.Service.IService
@inject IChiTietHoaDonService chiTietHoaDonService
@inject IHoaDonService hoaDonService
@inject NavigationManager manager
@inject IJSRuntime JS;
<h2>Thống kê</h2>
<EditForm Model="hoaDons" >
    <EditForm Model="hoaDonChiTiets">
        <div class="stats-cards">
            <div class="stat-card today">
                <div class="stat-title">Hôm nay</div>
                <div class="stat-value">0 ₫</div>
                <div class="stat-detail">
                    <span>Sản phẩm @hoaDons.Join(hoaDonChiTiets, x => x.HoaDonId , y => y.HoaDonId , (x , y) => new{x.NgayTao ,y.SoLuongSanPham , x.TrangThai ,TTHoaDonct = y.TrangThai  }).Where(x => x.NgayTao == DateTime.Now && x.TrangThai == "Đã thanh toán" && x.TTHoaDonct == true).Sum(x => x.SoLuongSanPham)</span> |
                    <span>Đơn thành công 0</span> | 
                    <span>Đơn huỷ 0</span> |
                    <span>Đơn trả 0</span>
                </div>
            </div>
            <div class="stat-card week">
                <div class="stat-title">Tuần này</div>
                <div class="stat-value">2,794,651 ₫</div>
                <div class="stat-detail">
                    <span>Sản phẩm 16</span> |
                    <span>Đơn thành công 4</span> |
                    <span>Đơn huỷ 1</span> |
                    <span>Đơn trả 1</span>
                </div>
            </div>
            <div class="stat-card month">
                <div class="stat-title">Tháng này</div>
                <div class="stat-value">2,794,651 ₫</div>
                <div class="stat-detail">
                    <span>Sản phẩm 16</span> |
                    <span>Đơn thành công 4</span> |
                    <span>Đơn huỷ 1</span> |
                    <span>Đơn trả 1</span>
                </div>
            </div>
            <div class="stat-card year">
                <div class="stat-title">Năm nay</div>
                <div class="stat-value">2,794,651 ₫</div>
                <div class="stat-detail">
                    <span>Sản phẩm 16</span> |
                    <span>Đơn thành công 4</span> |
                    <span>Đơn huỷ 1</span> |
                    <span>Đơn trả 1</span>
                </div>
            </div>
        </div>
        <div class="filter-area">
            <span>Bộ lọc</span>
            <button class="filter-btn active">NGÀY</button>
            <button class="filter-btn">TUẦN</button>
            <button class="filter-btn">THÁNG</button>
            <button class="filter-btn">NĂM</button>
            <button class="filter-btn">TÙY CHỈNH</button>
            <button class="export-btn">EXPORT TO EXCEL</button>
        </div>
        <div class="dashboard-table-chart">
            <div class="table-area">
                <div class="table-title">Danh sách sản phẩm bán chạy </div>
                <table class="product-table">
                    <thead>
                        <tr>
                            <th>Ảnh</th>
                            <th>Tên sản phẩm</th>
                            <th>Số lượng</th>
                            <th>Giá tiền</th>
                            <th>Kích cỡ</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr ng-repeat="sp in pagedProducts1[currentPage1]">
                            <td><img ng-src="{{sp.img}}" alt="sp" class="product-img"></td>
                            <td>{{sp.name}}</td>
                            <td>{{sp.qty}}</td>
                            <td>{{sp.price}}</td>
                            <td>{{sp.size}}</td>
                        </tr>
                    </tbody>
                </table>
                <div class="table-pagination">
                    <span>
                        Xem
                        <select ng-model="pageSize1" ng-change="updatePaging1()" ng-options="s for s in pageSizes1"></select>
                        sản phẩm
                    </span>
                    <div class="pagination-btns">
                        <button ng-disabled="currentPage1==0" ng-click="setPage1(currentPage1-1)">&lt;</button>
                        <button ng-repeat="p in [].constructor(totalPages1) track by $index"
                                ng-class="{active: $index==currentPage1}" ng-click="setPage1($index)">
                            {{$index+1}}
                        </button>
                        <button ng-disabled="currentPage1==totalPages1-1" ng-click="setPage1(currentPage1+1)">&gt;</button>
                    </div>
                </div>
            </div>
            <div class="stats-right">
                <div class="chart-area">
                    <div class="chart-title">Biểu đồ trạng thái tùy chỉnh</div>
                    <div class="fake-pie"></div>
                    <div class="chart-legend">
                        <div><span class="legend-color" style="background:#e74c3c"></span>Đã huỷ - 7.14%</div>
                        <div><span class="legend-color" style="background:#f1c40f"></span>Chờ xác nhận - 14.29%</div>
                        <div><span class="legend-color" style="background:#8e44ad"></span>Chờ giao hàng - 14.29%</div>
                        <div><span class="legend-color" style="background:#3498db"></span>Đang vận chuyển - 0%</div>
                        <div><span class="legend-color" style="background:#1abc9c"></span>Đã giao hàng - 0%</div>
                        <div><span class="legend-color" style="background:#2ecc71"></span>Đã thanh toán - 7.14%</div>
                        <div><span class="legend-color" style="background:#95a5a6"></span>Chờ thanh toán - 0%</div>
                        <div><span class="legend-color" style="background:#27ae60"></span>Hoàn thành - 42.86%</div>
                        <div><span class="legend-color" style="background:#16a085"></span>Trả hàng - 14.29%</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="dashboard-table-chart">
            <div class="table-area">
                <div class="table-title">Danh sách sản phẩm sắp hết hàng</div>
                <table class="product-table">
                    <thead>
                        <tr>
                            <th>Ảnh</th>
                            <th>Tên sản phẩm</th>
                            <th>Số lượng</th>
                            <th>Giá tiền</th>
                            <th>Kích cỡ</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr ng-repeat="sp in pagedProducts2[currentPage2]">
                            <td><img ng-src="{{sp.img}}" alt="sp" class="product-img"></td>
                            <td>{{sp.name}}</td>
                            <td>{{sp.qty}}</td>
                            <td>{{sp.price}}</td>
                            <td>{{sp.size}}</td>
                        </tr>
                    </tbody>
                </table>
                <div class="table-pagination">
                    <span>
                        Xem
                        <select ng-model="pageSize2" ng-change="updatePaging2()" ng-options="s for s in pageSizes2"></select>
                        sản phẩm
                    </span>
                    <div class="pagination-btns">
                        <button ng-disabled="currentPage2==0" ng-click="setPage2(currentPage2-1)">&lt;</button>
                        <button ng-repeat="p in [].constructor(totalPages2) track by $index"
                                ng-class="{active: $index==currentPage2}" ng-click="setPage2($index)">
                            {{$index+1}}
                        </button>
                        <button ng-disabled="currentPage2==totalPages2-1" ng-click="setPage2(currentPage2+1)">&gt;</button>
                    </div>
                </div>
            </div>
            <div class="stats-right">
                <div class="stats-card">
                    <span class="stats-icon">📊</span> Doanh thu ngày
                    <span class="stats-value">6,040,253 ₫</span>
                    <span class="stats-percent up">+53.73%</span>
                </div>
                <div class="stats-card">
                    <span class="stats-icon">📊</span> Doanh thu Tuần
                    <span class="stats-value">8,834,904 ₫</span>
                    <span class="stats-percent up">+100%</span>
                </div>
                <div class="stats-card">
                    <span class="stats-icon">📊</span> Doanh thu Tháng
                    <span class="stats-value">8,834,904 ₫</span>
                    <span class="stats-percent up">+100%</span>
                </div>
                <div class="stats-card">
                    <span class="stats-icon">📊</span> Doanh thu năm
                    <span class="stats-value">8,834,904 ₫</span>
                    <span class="stats-percent up">+100%</span>
                </div>
                <div class="stats-card">
                    <span class="stats-icon">📦</span> Đơn hàng ngày
                    <span class="stats-value">2</span>
                    <span class="stats-percent down">-81.82%</span>
                </div>
                <div class="stats-card">
                    <span class="stats-icon">📦</span> Đơn hàng tuần
                    <span class="stats-value">6</span>
                    <span class="stats-percent up">+100%</span>
                </div>
                <div class="stats-card">
                    <span class="stats-icon">📦</span> Đơn hàng tháng
                    <span class="stats-value">6</span>
                    <span class="stats-percent up">+100%</span>
                </div>
                <div class="stats-card">
                    <span class="stats-icon">📦</span> Đơn hàng năm
                    <span class="stats-value">6</span>
                    <span class="stats-percent up">+100%</span>
                </div>
                <div class="stats-card">
                    <span class="stats-icon">👟</span> Sản phẩm ngày
                    <span class="stats-value">21</span>
                    <span class="stats-percent up">+23.81%</span>
                </div>
                <div class="stats-card">
                    <span class="stats-icon">👟</span> Sản phẩm tuần
                    <span class="stats-value">37</span>
                    <span class="stats-percent up">+100%</span>
                </div>
                <div class="stats-card">
                    <span class="stats-icon">👟</span> Sản phẩm tháng
                    <span class="stats-value">37</span>
                    <span class="stats-percent up">+100%</span>
                </div>
                <div class="stats-card">
                    <span class="stats-icon">👟</span> Sản phẩm năm
                    <span class="stats-value">37</span>
                    <span class="stats-percent up">+100%</span>
                </div>
            </div>

        </div>
    </EditForm>
</EditForm>

@code{
    private List<HoaDon> hoaDons;
    private List<HoaDonChiTiet> hoaDonChiTiets;
    protected override async Task OnInitializedAsync()
	{
		if (hoaDons == null)
		{
			hoaDons = new List<HoaDon>();

		}
        hoaDons = await hoaDonService.GetAll();
        if (hoaDonChiTiets == null)
        {
            hoaDonChiTiets = new List<HoaDonChiTiet>();

        }
        hoaDonChiTiets = await chiTietHoaDonService.GetAllHDCTAsync();
	}
    private string activeFilter = "NGÀY";

    // Dữ liệu sản phẩm cho bảng 1
    private List<Giay> giays = new List<Giay>();
    private List<int> PageSizes1 = new List<int> { 5, 10 };
    private int PageSize1 = 5;
    private int CurrentPage1 = 0;
    private int TotalPages1 = 0;
    private List<List<Giay>> PagedProducts1 = new List<List<Giay>>();

    // Dữ liệu sản phẩm cho bảng 2
    private List<Giay> giays2 = new List<Giay>();
    private List<int> PageSizes2 = new List<int> { 5, 10 };
    private int PageSize2 = 5;
    private int CurrentPage2 = 0;
    private int TotalPages2 = 0;
    private List<List<Giay>> PagedProducts2 = new List<List<Giay>>();

    protected override void OnInitialized()
    {
        // Khởi tạo dữ liệu sản phẩm tương tự từ Main.js
        giays = new List<Giay>
        {
            
        };

        giays2 = new List<Giay>
        {

        };

        UpdatePaging1();
        UpdatePaging2();
    }

    // Cập nhật khi PageSize1 thay đổi
    private void OnPageSize1Changed(ChangeEventArgs e)
    {
        PageSize1 = int.Parse(e.Value.ToString());
        UpdatePaging1();
        CurrentPage1 = 0; // Reset về trang đầu tiên
    }

    // Cập nhật khi PageSize2 thay đổi
    private void OnPageSize2Changed(ChangeEventArgs e)
    {
        PageSize2 = int.Parse(e.Value.ToString());
        UpdatePaging2();
        CurrentPage2 = 0; // Reset về trang đầu tiên
    }

    // Logic phân trang cho bảng 1
    private void UpdatePaging1()
    {
        TotalPages1 = (int)Math.Ceiling((double)giays.Count / PageSize1);
        PagedProducts1 = new List<List<Giay>>();
        for (int i = 0; i < TotalPages1; i++)
        {
            PagedProducts1.Add(giays.Skip(i * PageSize1).Take(PageSize1).ToList());
        }
        if (CurrentPage1 >= TotalPages1) CurrentPage1 = 0;
    }

    private void SetPage1(int page)
    {
        if (page >= 0 && page < TotalPages1)
        {
            CurrentPage1 = page;
        }
    }

    // Logic phân trang cho bảng 2 (tương tự)
    private void UpdatePaging2()
    {
        TotalPages2 = (int)Math.Ceiling((double)giays2.Count / PageSize2);
        PagedProducts2 = new List<List<Giay>>();
        for (int i = 0; i < TotalPages2; i++)
        {
            PagedProducts2.Add(giays.Skip(i * PageSize2).Take(PageSize2).ToList());
        }
        if (CurrentPage2 >= TotalPages2) CurrentPage2 = 0;
    }

    private void SetPage2(int page)
    {
        if (page >= 0 && page < TotalPages2)
        {
            CurrentPage2 = page;
        }
    }

    // Logic cho các nút filter
    private void SetActiveFilter(string filter)
    {
        activeFilter = filter;
        // Thêm logic để lọc dữ liệu ở đây nếu cần
    }

    // Lưu ý: Các phần xử lý DOM trực tiếp như sidebar, dropdownAvatar, dropdownBell
    // trong Main.js không được chuyển đổi ở đây. Bạn nên cân nhắc:
    // 1. Sử dụng các tính năng Blazor để quản lý trạng thái hiển thị của chúng (ví dụ: dùng @bind-class, @if, @onclick).
    // 2. Nếu cần tương tác DOM phức tạp, hãy tạo các hàm JavaScript trong một file .js riêng
    //    và gọi chúng từ C# bằng IJSRuntime.
}