@page "/chatlieu"
@rendermode InteractiveServer
@inject IChatLieuService ChatLieuService

<div class="container mt-5">
    <h2 class="text-success mb-4">Quản lý Chất Liệu</h2>

    <button class="btn btn-success mb-3" @onclick="ShowModal">
        <i class="fa fa-plus"></i> Thêm chất liệu
    </button>

    <input class="form-control mb-3 w-50" placeholder="Tìm chất liệu..." @bind="SearchText" @bind:event="oninput" />

    <table class="table table-bordered table-hover align-middle">
        <thead class="table-success">
            <tr>
                <th>#</th>
                <th>Tên chất liệu</th>
                <th>Mô tả</th>
                <th>Trạng thái</th>
                <th>Hành động</th>
            </tr>
        </thead>
        <tbody>
            @if (!FilteredChatLieus.Any())
            {
                <tr>
                    <td colspan="5" class="text-center text-muted">Không tìm thấy chất liệu nào.</td>
                </tr>
            }
            else
            {
                @foreach (var (item, index) in FilteredChatLieus.Select((x, i) => (x, i + 1)))
                {
                    <tr>
                        <td>@index</td>
                        <td>@item.TenChatLieu</td>
                        <td>@item.MoTa</td>
                        <td>
                            <span class="badge @(item.TrangThai ? "bg-success" : "bg-secondary")">
                                @(item.TrangThai ? "Đang sử dụng" : "Ngừng sử dụng")
                            </span>
                        </td>
                        <td>
                            <button class="btn btn-sm btn-warning me-2" @onclick="() => EditChatLieu(item)">
                                <i class="fa fa-edit"></i>
                            </button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<ChatLieuModal IsOpen="@IsModalOpen"
               IsEdit="@IsEdit"
               @bind-TenChatLieu="@TenChatLieu"
               @bind-MoTa="@MoTa"
               @bind-TrangThai="@TrangThai"
               OnClose="CloseModal"
               OnSaved="HandleSave" />

@code {
    private List<ChatLieu> DanhSachChatLieu = new();
    private string SearchText = string.Empty;

    private IEnumerable<ChatLieu> FilteredChatLieus =>
        string.IsNullOrWhiteSpace(SearchText)
            ? DanhSachChatLieu
            : DanhSachChatLieu.Where(x =>
                (x.TenChatLieu ?? "").Contains(SearchText, StringComparison.OrdinalIgnoreCase) ||
                (x.MoTa ?? "").Contains(SearchText, StringComparison.OrdinalIgnoreCase));

    private bool IsModalOpen = false;
    private bool IsEdit = false;

    private string TenChatLieu = string.Empty;
    private string MoTa = string.Empty;
    private bool TrangThai = true;

    private Guid? EditingId = null;

    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync();
    }

    private async Task LoadDataAsync()
    {
        DanhSachChatLieu = await ChatLieuService.GetAllAsync();
    }

    private void ShowModal()
    {
        IsModalOpen = true;
        IsEdit = false;
        EditingId = null;
        TenChatLieu = string.Empty;
        MoTa = string.Empty;
        TrangThai = true;
    }

    private void EditChatLieu(ChatLieu item)
    {
        IsModalOpen = true;
        IsEdit = true;
        EditingId = item.ChatLieuId;
        TenChatLieu = item.TenChatLieu;
        MoTa = item.MoTa;
        TrangThai = item.TrangThai;
    }

    private void CloseModal()
    {
        IsModalOpen = false;
    }

    private async Task HandleSave((string Ten, string MoTa, bool TrangThai) result)
    {
        if (IsEdit && EditingId.HasValue)
        {
            var updated = new ChatLieu
            {
                ChatLieuId = EditingId.Value,
                TenChatLieu = result.Ten,
                MoTa = result.MoTa,
                TrangThai = result.TrangThai
            };

            await ChatLieuService.UpdateAsync(updated);
        }
        else
        {
            var newItem = new ChatLieu
            {
                TenChatLieu = result.Ten,
                MoTa = result.MoTa,
                TrangThai = result.TrangThai
            };

            await ChatLieuService.CreateAsync(newItem);
        }

        await LoadDataAsync();
        CloseModal();
    }
}
