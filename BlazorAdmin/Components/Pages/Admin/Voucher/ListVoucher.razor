@page "/Admin/voucher"
@using Data.Models;
@using BlazorAdmin.Service;
@using BlazorAdmin.Service.IService
@inject IVoucherService service;
@inject NavigationManager manager;
@inject IJSRuntime JS;

<h3>ListVoucher</h3>
@{
	int stt = 1;
}
<button class="btn btn-primary" @onclick="NavigateToCreate">Tạo mới +</button>
<table class="table">
	<thead>
		<tr>
			<td>STT</td>
			<td>Tên Voucher</td>
			<td>Ngày bắt đầu</td>
			<td>Ngày kết thúc</td>
			<td>Phần trăm</td>
			<td>Trạng thái</td>
			<td>Số lượng</td>
			<td>Tên tài khoản</td>
			<td>Hanh Dong</td>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Vouchers)
		{
			<tr>
				<td>@stt</td>
				<td>@item.TenVoucher</td>
				<td>@item.NgayBatDau.ToString("dd/MM/yyyy")</td>
				<td>@item.NgayKetThuc.ToString("dd/MM/yyyy")</td>
				<td>@item.PhanTram</td>
				<td>@item.TrangThai</td>
				<td>@item.SoLuong</td>
				<td>@item.TaiKhoan.Username</td>
				<td>
					<button class="btn btn-sm @(item.TrangThai ? "btn-danger" : "btn-success") me-2"
							@onclick="() => ToggleTrangThai(item.VoucherId)">
						🔄
					</button> 
				 <span>@(item.TrangThai ? "Đang diễn ra" : "Hết hạn")</span> 
				</td>
				<td>
					<button class="btn btn-primary" @onclick="() => NavigateToEdit(item.VoucherId)">Edit</button>
					<button class="btn btn-danger" @onclick="() => DeleteAsyncVoucher(item.VoucherId)">Delete</button>
				</td>
			</tr>
			stt++;
		}
	</tbody>
</table>

@code {

	private List<Voucher> Vouchers;

	protected override async Task OnInitializedAsync()
	{
		if (Vouchers == null)
		{
			Vouchers = new List<Voucher>();

		}
		Vouchers = await service.GetAll();
		
	}

	protected void NavigateToCreate()
	{
		manager.NavigateTo("/Admin/AddVoucher");
	}
	protected void NavigateToEdit(Guid id)
	{
		manager.NavigateTo($"/Admin/updatevoucher/{id}");
	}

	private async Task DeleteAsyncVoucher(Guid id)
	{
		var deleSanpham = await JS.InvokeAsync<bool>("confirm", $"Bạn có chắc chắn muốn xóa không?");
		if (deleSanpham)
		{
			await service.Delete(id);
			StateHasChanged();
		}
	}
	private async Task ToggleTrangThai(Guid id)
	{
		var voucher = Vouchers.FirstOrDefault(x => x.VoucherId == id);
		if (voucher != null)
		{

			voucher.TrangThai = !voucher.TrangThai;
			


			await service.Update(voucher);
			StateHasChanged();
		}
	}
}
