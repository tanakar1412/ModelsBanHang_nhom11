@page "/Admin/voucher"
@using Data.Models
@using BlazorAdmin.Service.IService
@inject IVoucherService service
@inject NavigationManager manager
@inject IJSRuntime JS

<h3 class="mb-3">🎟️ Quản lý Voucher</h3>

<div class="card shadow-sm p-4">
    <div class="d-flex justify-content-between mb-3">
        <input class="form-control w-50" placeholder="🔍 Tìm tên voucher..." @bind="searchText" @bind:event="oninput" />
        <button class="btn btn-warning text-dark fw-bold" @onclick="NavigateToCreate">
            <i class="bi bi-plus-circle me-1"></i> Tạo mới
        </button>
    </div>

    <table class="table table-bordered table-hover text-center align-middle">
        <thead class="table-light">
            <tr>
                <th>#</th>
                <th>Tên Voucher</th>
                <th>Ngày bắt đầu</th>
                <th>Ngày kết thúc</th>
                <th>Phần trăm</th>
                <th>Trạng thái</th>
                <th>Số lượng</th>
                <th>Hành động</th>
            </tr>
        </thead>
        <tbody>
            @if (PagedList.Count == 0)
            {
                <tr><td colspan="8" class="text-center text-muted">Không có dữ liệu.</td></tr>
            }
            else
            {
                @foreach (var (item, index) in PagedList.Select((x, i) => (x, i)))
                {
                    <tr>
                        <td>@((CurrentPage - 1) * PageSize + index + 1)</td>
                        <td>@item.TenVoucher</td>
                        <td>@item.NgayBatDau:dd/MM/yyyy</td>
                        <td>@item.NgayKetThuc:dd/MM/yyyy</td>
                        <td>@item.PhanTram%</td>
                        <td>
                            <span class="badge @(item.TrangThai ? "bg-warning text-dark" : "bg-secondary")">
                                @(item.TrangThai ? "Đang diễn ra" : "Hết hạn")
                            </span>
                        </td>
                        <td>@item.SoLuong</td>
                        <td>
                            <i class="bi bi-pencil-square text-warning me-2"
                               @onclick='@(() => NavigateToEdit(item.VoucherId))'
                               title="Sửa"></i>
                            <i class="bi bi-trash text-danger"
                               @onclick='@(() => DeleteAsyncVoucher(item.VoucherId))'
                               title="Xoá"></i>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code {
    private List<Voucher> Vouchers = new();
    private string searchText = "";
    private int CurrentPage = 1;
    private int PageSize = 10;

    private List<Voucher> Filtered => string.IsNullOrWhiteSpace(searchText)
        ? Vouchers
        : Vouchers.Where(v => v.TenVoucher.Contains(searchText, StringComparison.OrdinalIgnoreCase)).ToList();

    private List<Voucher> PagedList => Filtered.Skip((CurrentPage - 1) * PageSize).Take(PageSize).ToList();

    protected override async Task OnInitializedAsync()
    {
        Vouchers = await service.GetAll();
    }

    private void NavigateToCreate() =>
        manager.NavigateTo("/Admin/AddVoucher");

    private void NavigateToEdit(Guid id) =>
        manager.NavigateTo($"/Admin/updatevoucher/{id}");

    private async Task DeleteAsyncVoucher(Guid id)
    {
        bool confirmed = await JS.InvokeAsync<bool>("confirm", "Bạn có chắc chắn muốn xoá voucher này?");
        if (confirmed)
        {
            await service.Delete(id);
            Vouchers = await service.GetAll();
        }
    }
}
