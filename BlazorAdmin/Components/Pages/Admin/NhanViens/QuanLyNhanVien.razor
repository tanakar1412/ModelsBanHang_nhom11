@using Data.Models;
@using BlazorAdmin.Service;
@using BlazorAdmin.Service.IService
@inject INhanVienService service;
@inject NavigationManager manager;
@inject IJSRuntime JS;

<h3>DanhSachNhanVien</h3>
@{
	int stt = 1;
}
<button class="btn btn-primary" @onclick="NavigateToCreate">Thêm +</button>

<table class="table">
	<thead>
		<tr>
			<td>STT</td>
			<td>HoTen</td>
			<td>Số điện thoại</td>
			<td>Email</td>
			<td>Ngày sinh</td>
			<td>Chức vụ</td>
			<td>Ngày cập nhật cuối</td>
			<td>Trạng Thái</td>
			<td>Hanh Dong</td>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in NhanViens)
		{
			<tr>
				<td>@stt</td>
				<td>@item.HoTen</td>
				<td>@item.SoDienThoai</td>
				<td>@item.Email</td>
				<td>@item.NgaySinh.ToString("dd/MM/yyyy")</td>
				<td>@item.ChucVu?.TenChucVu</td>
				<td>@item.NgayCapNhatCuoiCung</td>
				<td>
					<button class="btn btn-sm @(item.TrangThai ? "btn-danger" : "btn-success") me-2"
							@onclick="() => ToggleTrangThai(item.NhanVienId)">
						🔄
					</button>
					<span>@(item.TrangThai ? "Đang hoạt động" : "Ngừng hoạt động")</span>
				</td>
				<td>
					<button class="btn btn-primary" @onclick="() => NavigateToEdit(item.NhanVienId)">Edit</button>
					<button class="btn btn-danger" @onclick="() => DeleteAsyncNhanVien(item.NhanVienId)">Delete</button>
				</td>
			</tr>
			stt++;
		}
	</tbody>
</table>

@code {
	private List<NhanVien> NhanViens;
	protected override async Task OnInitializedAsync()
	{
		if (NhanViens == null)
		{
			NhanViens = new List<NhanVien>();

		}
		NhanViens = await service.GetAllNhanVienAsync();
		await LoadNhanViensAsync();
	}
	private async Task LoadNhanViensAsync()
	{
		var allNhanViens = await service.GetAllNhanVienAsync();
		var adminId = Guid.Parse("88888888-8888-8888-8888-888888888888");
		NhanViens = allNhanViens.Where(x => x.NhanVienId != adminId).ToList();
	}


	protected void NavigateToCreate()
	{
		manager.NavigateTo("/AddNhanVien");
	}
	protected void NavigateToEdit(Guid id)
	{
		manager.NavigateTo($"/EditNhanVien/{id}");
	}

	private async Task DeleteAsyncNhanVien(Guid id)
	{
		var deleSanpham = await JS.InvokeAsync<bool>("confirm", $"Bạn có chắc chắn muốn xóa không?");
		if (deleSanpham)
		{
			await service.DeleteNhanVienAsync(id);
			await LoadNhanViensAsync();
			StateHasChanged();
		}
	}
	private async Task ToggleTrangThai(Guid id)
	{
		var nhanVien = NhanViens.FirstOrDefault(x => x.NhanVienId == id);
		if (nhanVien != null)
		{

			nhanVien.TrangThai = !nhanVien.TrangThai;
			nhanVien.NgayCapNhatCuoiCung = DateTime.Now;


			await service.UpdateNhanVienAsync(nhanVien);
			await LoadNhanViensAsync();
			StateHasChanged();
		}
	}


}