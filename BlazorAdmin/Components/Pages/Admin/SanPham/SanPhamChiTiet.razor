@page "/giay/{giayid:guid}"
@inject IGiayChiTietService giayChiTietService
@inject IMauSacService mauSacService
@inject IKichCoService kichCoService
@inject IAnhService anhService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using API.IService
@using API.Models.DTO
@using System.Globalization
@using Humanizer
@using Microsoft.AspNetCore.Components.Forms
@code {
    [Parameter] public Guid giayid { get; set; }

    private GiayChiTietDTO currentItem = new();
    private List<MauSacDTO> mauSacList = new();
    private List<KichCoDTO> kichCoList = new();
    private List<GiayChiTietDTO> danhSachChiTiet = new();
    private bool isEditMode = false;

    protected override async Task OnInitializedAsync()
    {
        currentItem.GiayId = giayid;
        mauSacList = (await mauSacService.GetAllAsync()).ToList();
        kichCoList = (await kichCoService.GetAllAsync()).ToList();
        danhSachChiTiet = (await giayChiTietService.GetByGiayIdAsync(giayid)).ToList();
    }

    private async Task HandleSave()
    {
        if (isEditMode)
        {
            await giayChiTietService.UpdateAsync(currentItem.GiayChiTietId, currentItem);
        }
        else
        {
            await giayChiTietService.CreateAsync(currentItem);
        }

        var jsModule = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./Js/sanphamchitiet.js");
        await jsModule.InvokeVoidAsync("hideModal", "#giayChiTietModal");

        danhSachChiTiet = (await giayChiTietService.GetByGiayIdAsync(giayid)).ToList();
        StateHasChanged();
    }

    private async Task UploadAnh(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            var stream = file.OpenReadStream(10 * 1024 * 1024); // Max 10MB
            var memoryStream = new MemoryStream();
            await stream.CopyToAsync(memoryStream);
            memoryStream.Position = 0;

            var formFile = new FormFile(memoryStream, 0, memoryStream.Length, file.Name, file.Name)
                {
                    Headers = new HeaderDictionary(),
                    ContentType = file.ContentType
                };

            var uploadDto = new AnhUploadDTO
                {
                    File = formFile,
                    TenAnh = file.Name,
                    GiayChiTietId = currentItem.GiayChiTietId
                };

            var anh = await anhService.UploadAsync(file, file.Name, currentItem.GiayChiTietId);
            if (anh != null)
            {
                currentItem.AnhGiay = anh.DuongDan;
            }
        }
    }

    private async Task EditItem(GiayChiTietDTO item)
    {
        currentItem = new GiayChiTietDTO
            {
                GiayChiTietId = item.GiayChiTietId,
                GiayId = item.GiayId,
                MauSacId = item.MauSacId,
                KichCoId = item.KichCoId,
                Gia = item.Gia,
                SoLuongCon = item.SoLuongCon,
                MoTa = item.MoTa,
                TrangThai = item.TrangThai,
                AnhGiay = item.AnhGiay,
                NgayTao = item.NgayTao,
                NgaySua = item.NgaySua
            };
        isEditMode = true;

        var jsModule = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./Js/sanphamchitiet.js");
        await jsModule.InvokeVoidAsync("showModal", "#giayChiTietModal");
    }

    private async Task DeleteItem(Guid id)
    {
        if (await JSRuntime.InvokeAsync<bool>("confirm", "Bạn có chắc muốn xoá chi tiết này?"))
        {
            await giayChiTietService.DeleteAsync(id);
            danhSachChiTiet = (await giayChiTietService.GetByGiayIdAsync(giayid)).ToList();
        }
    }
    private async Task ShowAddModal()
    {
        currentItem = new GiayChiTietDTO { GiayId = giayid, TrangThai = true };
        isEditMode = false;

        var jsModule = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./Js/sanphamchitiet.js");
        await jsModule.InvokeVoidAsync("showModal", "#giayChiTietModal");
    }

}

<script src="./Js/sanphamchitiet.js"></script>

<h4 class="mb-3 fw-bold">Sản phẩm / Chi tiết sản phẩm</h4>

<button class="btn btn-primary mb-3" @onclick="ShowAddModal">Thêm chi tiết mới</button>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Màu sắc</th>
            <th>Size</th>
            <th>Giá</th>
            <th>Số lượng</th>
            <th>Ảnh</th>
            <th>Trạng thái</th>
            <th>Ngày tạo</th>
            <th>Ngày sửa</th>
            <th>Hành động</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in danhSachChiTiet)
        {
            <tr>
                <td>@item.TenMau</td>
                <td>@item.size</td>
                <td>@item.Gia.ToString("N0", new CultureInfo("vi-VN"))</td>
                <td>@item.SoLuongCon</td>
                <td><img src="@item.AnhGiay" style="height: 50px;" /></td>
                <td>@(item.TrangThai ? "Đang bán" : "Ngừng bán")</td>
                <td>@item.NgayTao.ToString("dd/MM/yyyy")</td>
                <td>@item.NgaySua.ToString("dd/MM/yyyy")</td>
                <td>
                    <button class="btn btn-sm btn-warning me-1" @onclick="() => EditItem(item)">Sửa</button>
                    <button class="btn btn-sm btn-danger" @onclick="() => DeleteItem(item.GiayChiTietId)">Xoá</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal thêm/sửa -->
<div class="modal fade" id="giayChiTietModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@(isEditMode ? "Cập nhật" : "Thêm mới") chi tiết giày</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="currentItem" OnValidSubmit="HandleSave">
                    <DataAnnotationsValidator />
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">Màu sắc</label>
                            <InputSelect @bind-Value="currentItem.MauSacId" class="form-select">
                                <option value="">Chọn màu sắc</option>
                                @foreach (var item in mauSacList)
                                {
                                    <option value="@item.MauSacId">@item.TenMau</option>
                                }
                            </InputSelect>
                            <ValidationMessage For="@(() => currentItem.MauSacId)" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Size</label>
                            <InputSelect @bind-Value="currentItem.KichCoId" class="form-select">
                                <option value="">Chọn size</option>
                                @foreach (var item in kichCoList)
                                {
                                    <option value="@item.KichCoId">@item.size</option>
                                }
                            </InputSelect>
                            <ValidationMessage For="@(() => currentItem.KichCoId)" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Giá</label>
                            <InputNumber @bind-Value="currentItem.Gia" class="form-control" />
                            <ValidationMessage For="@(() => currentItem.Gia)" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Số lượng</label>
                            <InputNumber @bind-Value="currentItem.SoLuongCon" class="form-control" />
                            <ValidationMessage For="@(() => currentItem.SoLuongCon)" />
                        </div>
                        <div class="col-12">
                            <label class="form-label">Mô tả</label>
                            <InputTextArea @bind-Value="currentItem.MoTa" class="form-control" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Trạng thái</label>
                            <div class="form-check form-switch">
                                <InputCheckbox @bind-Value="currentItem.TrangThai" class="form-check-input" />
                                <label class="form-check-label">@(currentItem.TrangThai ? "Đang bán" : "Ngừng bán")</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Ảnh sản phẩm</label>
                            <InputFile OnChange="UploadAnh" accept="image/*" class="form-control" />
                            @if (!string.IsNullOrEmpty(currentItem.AnhGiay))
                            {
                                <img src="@currentItem.AnhGiay" class="img-thumbnail mt-2" style="max-height: 100px" />
                            }
                        </div>
                    </div>
                    <div class="modal-footer mt-3">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                        <button type="submit" class="btn btn-primary">Lưu</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>