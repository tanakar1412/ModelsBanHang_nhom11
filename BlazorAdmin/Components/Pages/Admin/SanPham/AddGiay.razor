@page "/AddGiay"
@rendermode InteractiveServer
@using API.IService
@using BlazorAdmin.Service
@using API.Models.DTO
@using Microsoft.AspNetCore.Components.Forms
@inject IMauSacService mauSacService
@inject IGiayChiTietService giayChiTietService
@inject IGiayService giayService
@inject IThuongHieuService thuongHieuService
@inject IChatLieuService chatLieuService
@inject IDeGiayService deGiayService
@inject ITheLoaiGiayService theLoaiGiayService
@inject IKieuDangService kieuDangService
@inject IAnhService AnhService
@inject IJSRuntime JS
@inject NavigationManager NavigationManager

<div class="container-fluid px-4">
    <h3 class="mb-4">Thêm sản phẩm mới</h3>

    @if (isLoading)
    {
        <div class="spinner-border text-primary" role="status"></div>
    }
    else
    {
        <EditForm Model="giayModel" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="row g-3 mb-4">
                <div class="col-md-6">
                    <label class="form-label">Tên giày</label>
                    <InputText class="form-control" @bind-Value="giayModel.TenGiay" />
                </div>
                <div class="col-md-6">
                    <label class="form-label">Thương hiệu</label>
                    <InputSelect class="form-select" @bind-Value="giayModel.ThuongHieuId">
                        <option value="">-- Chọn --</option>
                        @foreach (var item in thuongHieuOptions)
                        {
                            <option value="@item.ThuongHieuId">@item.TenThuongHieu</option>
                        }
                    </InputSelect>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Chất liệu</label>
                    <InputSelect class="form-select" @bind-Value="giayModel.ChatLieuId">
                        <option value="">-- Chọn --</option>
                        @foreach (var item in chatLieuOptions)
                        {
                            <option value="@item.ChatLieuId">@item.TenChatLieu</option>
                        }
                    </InputSelect>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Kiểu dáng</label>
                    <InputSelect class="form-select" @bind-Value="giayModel.KieuDangId">
                        <option value="">-- Chọn --</option>
                        @foreach (var item in kieuDangOptions)
                        {
                            <option value="@item.KieuDangId">@item.TenKieuDang</option>
                        }
                    </InputSelect>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Đế giày</label>
                    <InputSelect class="form-select" @bind-Value="giayModel.DeGiayId">
                        <option value="">-- Chọn --</option>
                        @foreach (var item in deGiayOptions)
                        {
                            <option value="@item.DeGiayId">@item.TenDeGiay</option>
                        }
                    </InputSelect>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Thể loại giày</label>
                    <InputSelect class="form-select" @bind-Value="giayModel.TheLoaiGiayId">
                        <option value="">-- Chọn --</option>
                        @foreach (var item in theLoaiOptions)
                        {
                            <option value="@item.TheLoaiGiayId">@item.TenTheLoai</option>
                        }
                    </InputSelect>
                </div>
            </div>

            <hr />
            <h5>Chọn màu sắc và thêm kích cỡ</h5>
            <div class="mb-3 d-flex flex-wrap gap-2">
                @foreach (var mau in danhSachMauCoBan)
                {
                    <div class="form-check">
                        <input class="form-check-input"
                               type="checkbox"
                               id="mau_@mau.MauSacId"
                               @onchange="() => ToggleMau(mau)"
                               checked="@danhSachChiTiet.Any(x => x.MauSacId == mau.MauSacId)" />
                        <label class="form-check-label" for="mau_@mau.MauSacId">
                            <span class="badge rounded-pill px-3 py-2" style="background:@mau.Color">@mau.TenMau</span>
                        </label>
                    </div>
                }
            </div>

            @foreach (var mau in danhSachChiTiet)
            {
                var selectedMau = danhSachMauCoBan.FirstOrDefault(x => x.MauSacId == mau.MauSacId);
                <div class="p-3 mb-3 border rounded bg-light">
                    <div class="d-flex justify-content-between">
                        <h6>Màu: <span class="badge" style="background:@selectedMau?.Color">@mau.TenMau</span></h6>
                        <button type="button" class="btn btn-sm btn-danger" @onclick="() => RemoveMau(mau)">Xóa màu</button>
                    </div>

                    @foreach (var size in mau.ChiTietSizes)
                    {
                        <div class="row g-2 align-items-center mt-2">
                            <div class="col-md-3">
                                <label>Kích cỡ</label>
                                <select class="form-select" @bind="size.KichCoId">
                                    <option value="">-- Chọn size --</option>
                                    @foreach (var kc in danhSachKichCo)
                                    {
                                        <option value="@kc.KichCoId">@kc.TenKichCo</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-2">
                                <label>Số lượng</label>
                                <InputNumber class="form-control" @bind-Value="size.SoLuong" min="1" />
                            </div>
                            <div class="col-md-2">
                                <label>Giá</label>
                                <InputNumber class="form-control" @bind-Value="size.Gia" min="1000" />
                            </div>
                            <div class="col-md-3">
                                <label>Hình ảnh</label>
                                <InputFile OnChange="e => UploadAnh(e, size)" />
                                @if (!string.IsNullOrEmpty(size.AnhDaTai))
                                {
                                    <img src="@size.AnhDaTai" width="60" class="mt-1" />
                                }
                            </div>
                            <div class="col-md-2 d-flex align-items-end">
                                <button class="btn btn-danger w-100" @onclick="() => RemoveSize(mau, size)">Xóa</button>
                            </div>
                        </div>
                    }

                    <button type="button" class="btn btn-outline-primary mt-2" @onclick="() => AddSize(mau)">
                        Thêm size
                    </button>
                </div>
            }

            <div class="mt-4">
                <button class="btn btn-secondary me-2" @onclick="HuyBo">Hủy</button>
                <button class="btn btn-primary" type="submit" disabled="@isSubmitting">Lưu</button>
            </div>
        </EditForm>
    }
</div>

@code {
    private GiayDTO giayModel = new()
        {
            NgayTao = DateTime.Now,
            TrangThai = true,
            ChiTietGiays = new List<GiayChiTietDTO>()
        };

    private List<ThuongHieu> thuongHieuOptions = new();
    private List<ChatLieu> chatLieuOptions = new();
    private List<KieuDangDTO> kieuDangOptions = new();
    private List<TheLoaiGiayDTO> theLoaiOptions = new();
    private List<DeGiayDTO> deGiayOptions = new();
    private List<GiayChiTietTheoMauDTO> danhSachChiTiet = new();
    private bool isLoading = true;
    private bool isSubmitting = false;

    private List<MauSacDTO> danhSachMauCoBan = new()
    {
        new() { MauSacId = Guid.NewGuid(), TenMau = "Đỏ", Color = "#dc3545" },
        new() { MauSacId = Guid.NewGuid(), TenMau = "Xanh", Color = "#0d6efd" },
        new() { MauSacId = Guid.NewGuid(), TenMau = "Vàng", Color = "#ffc107" },
        new() { MauSacId = Guid.NewGuid(), TenMau = "Trắng", Color = "#ffffff" },
        new() { MauSacId = Guid.NewGuid(), TenMau = "Đen", Color = "#000000" },
    };

    private List<KichCoDTO> danhSachKichCo = Enumerable.Range(35, 14)
        .Select(i => new KichCoDTO
            {
                KichCoId = Guid.NewGuid(),
                TenKichCo = $"Size {i}",
                size = i
            }).ToList();

    protected override async Task OnInitializedAsync()
    {
        var tasks = new List<Task>
        {
            Task.Run(async () => thuongHieuOptions = (await thuongHieuService.GetAllAsync())?.ToList() ?? new()),
            Task.Run(async () => chatLieuOptions = (await chatLieuService.GetAllAsync())?.ToList() ?? new()),
            Task.Run(async () => kieuDangOptions = (await kieuDangService.GetAllAsync())?.ToList() ?? new()),
            Task.Run(async () => theLoaiOptions = (await theLoaiGiayService.GetAllAsync())?.ToList() ?? new()),
            Task.Run(async () => deGiayOptions = (await deGiayService.GetAllAsync())?.ToList() ?? new())
        };

        await Task.WhenAll(tasks);
        isLoading = false;
    }

    private void ToggleMau(MauSacDTO mau)
    {
        var exist = danhSachChiTiet.FirstOrDefault(x => x.MauSacId == mau.MauSacId);
        if (exist != null) danhSachChiTiet.Remove(exist);
        else
        {
            danhSachChiTiet.Add(new GiayChiTietTheoMauDTO
                {
                    MauSacId = mau.MauSacId,
                    TenMau = mau.TenMau,
                    ChiTietSizes = new()
                });
        }
    }

    private void AddSize(GiayChiTietTheoMauDTO mau)
    {
        mau.ChiTietSizes.Add(new GiayChiTietSizeDTO());
    }

    private void RemoveSize(GiayChiTietTheoMauDTO mau, GiayChiTietSizeDTO size)
    {
        mau.ChiTietSizes.Remove(size);
    }

    private void RemoveMau(GiayChiTietTheoMauDTO mau)
    {
        danhSachChiTiet.Remove(mau);
    }

    private void HuyBo()
    {
        NavigationManager.NavigateTo("/SanPham");
    }

    private async Task UploadAnh(InputFileChangeEventArgs e, GiayChiTietSizeDTO size)
    {
        var file = e.File;
        if (file != null)
        {
            var result = await AnhService.UploadAsync(file, file.Name);
            size.AnhDaTai = result?.DuongDan;
            size.AnhGiay = result?.DuongDan;
        }
    }

    private async Task HandleValidSubmit()
    {
        isSubmitting = true;

        giayModel.ChiTietGiays = danhSachChiTiet
            .SelectMany(m => m.ChiTietSizes.Select(size => new GiayChiTietDTO
                {
                    MauSacId = m.MauSacId,
                    TenMau = m.TenMau,
                    KichCoId = size.KichCoId,
                    SoLuongCon = size.SoLuong,
                    Gia = (float)size.Gia,
                    NgayTao = DateTime.Now,
                    TrangThai = true,
                    size = danhSachKichCo.FirstOrDefault(k => k.KichCoId == size.KichCoId)?.size.ToString(),
                    AnhGiay = size.AnhGiay
                })).ToList();

        var result = await giayService.CreateAsync(giayModel);
        if (result != null)
        {
            await JS.InvokeVoidAsync("Swal.fire", "Thành công", "Đã thêm sản phẩm!", "success");
            NavigationManager.NavigateTo("/Giay/{GiayId:guid}");
        }

        isSubmitting = false;
    }

    private class GiayChiTietTheoMauDTO
    {
        public Guid MauSacId { get; set; }
        public string TenMau { get; set; }
        public List<GiayChiTietSizeDTO> ChiTietSizes { get; set; } = new();
    }

    private class GiayChiTietSizeDTO
    {
        public Guid KichCoId { get; set; }
        public int SoLuong { get; set; }
        public decimal Gia { get; set; }
        public string? AnhGiay { get; set; }
        public string? AnhDaTai { get; set; }
    }
} 