@page "/ThuongHieu"
@using Data.Models
@using BlazorAdmin.Service.IService
@inject IJSRuntime JS
@inject IThuongHieuService ThuongHieuService

<h2 class="text-primary mb-4"><i class="fa-solid fa-building-flag"></i> Quản lý Thương Hiệu</h2>

<button class="btn btn-primary mb-3" @onclick="ShowAddModal">
    <i class="fa fa-plus"></i> Thêm thương hiệu
</button>

@if (IsModalVisible)
{
    <div class="modal fade show d-block" style="background-color: rgba(0,0,0,0.5);" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <EditForm Model="Model" OnValidSubmit="HandleValidSubmit">
                    <div class="modal-header">
                        <h5 class="modal-title">@ModalTitle</h5>
                        <button type="button" class="btn-close" @onclick="CloseModal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Tên thương hiệu</label>
                            <InputText class="form-control" @bind-Value="Model.TenThuongHieu" required />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Email</label>
                            <InputText type="email" class="form-control" @bind-Value="Model.Email" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">SĐT</label>
                            <InputText class="form-control" @bind-Value="Model.SDT" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Địa chỉ</label>
                            <InputText class="form-control" @bind-Value="Model.DiaChi" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Mô tả</label>
                            <InputTextArea class="form-control" @bind-Value="Model.MoTa" rows="2" />
                        </div>
                        <div class="form-check mb-3">
                            <InputCheckbox class="form-check-input" @bind-Value="Model.TrangThai" />
                            <label class="form-check-label">Đang hoạt động</label>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-success"><i class="fa fa-save"></i> Lưu</button>
                        <button type="button" class="btn btn-secondary" @onclick="CloseModal">Hủy</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}

<table class="table table-bordered table-hover">
    <thead class="table-primary">
        <tr>
            <th>#</th>
            <th>Tên</th>
            <th>Email</th>
            <th>SĐT</th>
            <th>Địa chỉ</th>
            <th>Trạng thái</th>
            <th>Hành động</th>
        </tr>
    </thead>
    <tbody>
        @if (ThuongHieus.Count == 0)
        {
            <tr>
                <td colspan="7" class="text-center text-muted">Chưa có thương hiệu nào.</td>
            </tr>
        }
        else
        {
            @foreach (var (item, i) in ThuongHieus.Select((x, i) => (x, i)))
            {
                <tr>
                    <td>@(i + 1)</td>
                    <td>@item.TenThuongHieu</td>
                    <td>@item.Email</td>
                    <td>@item.SDT</td>
                    <td>@item.DiaChi</td>
                    <td>
                        <span class="badge bg-@(item.TrangThai ? "success" : "secondary")">
                            @(item.TrangThai ? "Hoạt động" : "Ngừng")
                        </span>
                    </td>
                    <td>
                        <button class="btn btn-sm btn-warning me-1" @onclick="() => Edit(item)">
                            <i class="fa fa-edit"></i>
                        </button>
                        <button class="btn btn-sm btn-danger" @onclick="() => Delete(item.ThuongHieuId)">
                            <i class="fa fa-trash"></i>
                        </button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    private List<ThuongHieu> ThuongHieus = new();
    private ThuongHieu Model = new();
    private string ModalTitle = "Thêm Thương Hiệu";
    private bool IsModalVisible = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync();
    }

    private async Task LoadDataAsync()
    {
        ThuongHieus = await ThuongHieuService.GetAllAsync();
    }

    private void ShowAddModal()
    {
        Model = new ThuongHieu(); // reset
        ModalTitle = "Thêm Thương Hiệu";
        IsModalVisible = true;
    }

    private void Edit(ThuongHieu item)
    {
        Model = new ThuongHieu
        {
            ThuongHieuId = item.ThuongHieuId,
            TenThuongHieu = item.TenThuongHieu,
            Email = item.Email,
            SDT = item.SDT,
            DiaChi = item.DiaChi,
            MoTa = item.MoTa,
            TrangThai = item.TrangThai
        };
        ModalTitle = "Sửa Thương Hiệu";
        IsModalVisible = true;
    }

    private async Task Delete(Guid id)
    {
        await ThuongHieuService.DeleteAsync(id);
        await LoadDataAsync();
    }

    private void CloseModal()
    {
        IsModalVisible = false;
    }

    private async Task HandleValidSubmit()
    {
        if (Model.ThuongHieuId == Guid.Empty)
        {
            await ThuongHieuService.CreateAsync(Model);
        }
        else
        {
            await ThuongHieuService.UpdateAsync(Model);
        }

        IsModalVisible = false;
        await LoadDataAsync();
    }
}
