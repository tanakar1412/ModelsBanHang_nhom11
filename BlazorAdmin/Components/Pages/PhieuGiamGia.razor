@page "/phieugiamgia"
@using System.Globalization
@using Data.Models
@inject VoucherService VoucherService

<link href="/css/PhieuGiamGia.css" rel="stylesheet" />

<div class="card">
    <h2>Phiếu giảm giá</h2>

    <div class="top-bar">
        <input type="text" placeholder="🔍 Tìm phiếu giảm giá theo mã hoặc tên" @bind="SearchTerm" @bind:event="oninput" />
        <div style="display: flex; gap: 10px;">
            <button class="btn" @onclick="CreateVoucher">+ Tạo mới</button>
            <button class="btn" @onclick="ExportExcel">Xuất Excel</button>
        </div>
    </div>

    <div class="filters">
        <input type="date" @bind="FromDate" />
        <input type="date" @bind="ToDate" />

        <select @bind="SelectedStatus">
            <option value="">Trạng thái</option>
            <option value="true">Đang diễn ra</option>
            <option value="false">Đã kết thúc</option>
        </select>
    </div>

    <table>
        <thead>
            <tr>
                <th>STT</th>
                <th>Tên</th>
                <th>Phần trăm</th>
                <th>Số lượng</th>
                <th>Ngày bắt đầu</th>
                <th>Ngày kết thúc</th>
                <th>Trạng thái</th>
                <th>Hành động</th>
            </tr>
        </thead>
        <tbody>
            @if (FilteredData is not null)
            {
                @foreach (var (v, index) in FilteredData.Select((item, i) => (item, i)))
                {
                    <tr>
                        <td>@(index + 1)</td>
                        <td>@v.TenVoucher</td>
                        <td>@v.PhanTram %</td>
                        <td>@v.SoLuong</td>
                        <td>@v.NgayBatDau.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture)</td>
                        <td>@v.NgayKetThuc.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture)</td>
                        <td><span class="status">@(v.TrangThai ? "Đang diễn ra" : "Đã kết thúc")</span></td>
                        <td><button class="btn btn-sm" @onclick="() => ViewVoucher(v)">👁️ Xem</button></td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code {
    private string SearchTerm = string.Empty;
    private string SelectedStatus = string.Empty;
    private DateTime? FromDate;
    private DateTime? ToDate;

    private List<Voucher> Data = new();

    protected override async Task OnInitializedAsync()
    {
        Data = await VoucherService.GetAll();
    }

    private IEnumerable<Voucher> FilteredData => Data.Where(v =>
        (string.IsNullOrWhiteSpace(SearchTerm) ||
            v.TenVoucher.Contains(SearchTerm, StringComparison.OrdinalIgnoreCase)) &&
        (string.IsNullOrWhiteSpace(SelectedStatus) || v.TrangThai.ToString().ToLower() == SelectedStatus.ToLower()) &&
        (!FromDate.HasValue || v.NgayBatDau >= FromDate.Value) &&
        (!ToDate.HasValue || v.NgayBatDau <= ToDate.Value)
    );

    private void ExportExcel()
    {
        Console.WriteLine("📤 Chức năng Xuất Excel đang được phát triển!");
    }

    private void CreateVoucher()
    {
        Console.WriteLine("📝 Chức năng Tạo phiếu giảm giá sẽ được mở form!");
    }

    private void ViewVoucher(Voucher voucher)
    {
        Console.WriteLine($"👁️ Xem chi tiết phiếu giảm giá: {voucher.TenVoucher}");
    }
}